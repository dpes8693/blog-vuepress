(self.webpackChunkblog_vuepress=self.webpackChunkblog_vuepress||[]).push([[571],{7972:(e,D,r)=>{"use strict";r.r(D),r.d(D,{data:()=>p});const p={key:"v-1b629b01",path:"/review/%E6%8C%96%E5%9D%91.html",title:"主題列表",lang:"zh-tw",frontmatter:{},excerpt:"",headers:[{level:2,title:"前端面試題庫",slug:"前端面試題庫",children:[{level:3,title:"DDD大王",slug:"ddd大王",children:[]}]}],filePathRelative:"review/挖坑.md",git:{updatedTime:165098829e4,contributors:[{name:"Richard Lin",email:"33016870+dpes8693@users.noreply.github.com",commits:1}]}}},4114:(e,D,r)=>{"use strict";r.r(D),r.d(D,{default:()=>o});var p=r(6252);const t=(0,p.Wm)("h1",{id:"主題列表"},[(0,p.Wm)("a",{class:"header-anchor",href:"#主題列表"},"#"),(0,p.Uk)(" 主題列表")],-1),n=(0,p.Wm)("p",null,"learning-with-tuco\\2022\\playground.md",-1),i=(0,p.Uk)("p5.js 炫炮 socket.io 即時連線軟體 line bot api virsody.io 黑洞 線上履歷博物館展覽 yml語法 "),l={href:"https://youtu.be/sqrKB1yuAek",target:"_blank",rel:"noopener noreferrer"},s=(0,p.Uk)("CI/CD"),a=(0,p.uE)('<h2 id="前端面試題庫"><a class="header-anchor" href="#前端面試題庫">#</a> 前端面試題庫</h2><p>https://blog.moli.rocks/2019/02/04/y20190205y/</p><h3 id="ddd大王"><a class="header-anchor" href="#ddd大王">#</a> DDD大王</h3><p>四個開發模式意思:</p><p>TDD：測試驅動開發（Test-Driven Development）</p><p>BDD：行為驅動開發（Behavior Driven Development）</p><p>ATDD：驗收測試驅動開發（Acceptance Test Driven Development）</p><p>DDD：領域驅動開發（Domain Drive Design）</p><p>1、TDD：測試驅動開發（Test-Driven Development）</p><p>測試驅動開發是敏捷開發中的一項核心實踐和技術，也是一種設計方法論，TDD首先考慮使用需求（物件、功能、過程、介面等）</p><p>主要是編寫測試用例框架對功能的過程和介面進行設計，而測試框架可以持續進行驗證。大行其道的一些模式對TDD的支援都非常不錯，比如MVC和MVP等</p><p>2、BDD：行為驅動開發（Behavior Driven Development）</p><p>也就是行為驅動開發。這裡的B並非指的是Business，實際上BDD可以看作是對TDD的一種補充，讓開發、測試、BA以及客戶都能在這個基礎上達成一致，JBehave之類的BDD框架</p><p>3、ATDD：驗收測試驅動開發（Acceptance Test Driven Development）</p><p>通過單元測試用例來驅動功能程式碼的實現，團隊需要定義出期望的質量標準和驗收細則，以明確而且達成共識的驗收測試計劃（包含一系列測試場景）來驅動開發人員的TDD實踐和測試人員的測試指令碼開發。面向開發人員，強調如何實現系統以及如何檢驗</p><p>4、DDD：領域驅動開發（Domain Drive Design）</p><p>DDD指的是Domain Drive Design，也就是領域驅動開發,DDD實際上也是建立在這個基礎之上，因為它關注的是Service層的設計，著重於業務的實現,將分析和設計結合起來，不再使他們處於分裂的狀態，這對於我們正確完整的實現客戶的需求，以及建立一個具有業務伸縮性的模型</p>',17),o={render:function(e,D){const r=(0,p.up)("OutboundLink");return(0,p.wg)(),(0,p.j4)(p.HY,null,[t,n,(0,p.Wm)("p",null,[i,(0,p.Wm)("a",l,[s,(0,p.Wm)(r)])]),a],64)}}}}]);