(self.webpackChunkblog_vuepress=self.webpackChunkblog_vuepress||[]).push([[565],{8285:(n,s,a)=>{"use strict";a.r(s),a.d(s,{data:()=>p});const p={key:"v-58947e5a",path:"/backend/express/",title:"Express code example",lang:"zh-tw",frontmatter:{},excerpt:"",headers:[{level:2,title:"寫這系列的動機",slug:"寫這系列的動機",children:[]},{level:2,title:"學 Express 前你需要具備的知識",slug:"學-express-前你需要具備的知識",children:[]},{level:2,title:"Github 有整理了我寫的範例",slug:"github-有整理了我寫的範例",children:[]},{level:2,title:"知識補充",slug:"知識補充",children:[]},{level:2,title:"body-parser 新舊程式碼 PK",slug:"body-parser-新舊程式碼-pk",children:[]}],filePathRelative:"backend/express/index.md",git:{updatedTime:null,contributors:[]}}},7999:(n,s,a)=>{"use strict";a.r(s),a.d(s,{default:()=>v});var p=a(6252);const t=(0,p.uE)('<h1 id="express-code-example"><a class="header-anchor" href="#express-code-example">#</a> Express code example</h1><h2 id="寫這系列的動機"><a class="header-anchor" href="#寫這系列的動機">#</a> 寫這系列的動機</h2><p>Nodejs 2009 年到現在也有一定年紀了，經歷了 ES6 導致網路上出現新舊範例混合這個問題!</p><p>我剛學的時候也很頭痛，到底哪個寫法比較好?哪些是套件語法?哪些是 express 內建語法?</p><p>因為有這個痛點，所以花了很多時間爬文和整理，希望有幫助到剛入坑的人!</p><h2 id="學-express-前你需要具備的知識"><a class="header-anchor" href="#學-express-前你需要具備的知識">#</a> 學 Express 前你需要具備的知識</h2>',6),e=(0,p.Wm)("li",null,[(0,p.Wm)("p",null,"知道 Nodejs 和 JS 的差異")],-1),o=(0,p.Wm)("li",null,[(0,p.Wm)("p",null,"知道 npm 是甚麼和 npm 指令")],-1),c=(0,p.Wm)("li",null,[(0,p.Wm)("p",null,"var const let 差異")],-1),u=(0,p.Wm)("li",null,[(0,p.Wm)("p",null,"ES6 新的語法相關知識")],-1),l=(0,p.Uk)("前端送給後端的"),i={href:"https://notfalse.net/40/http-representation#Content-Encoding",target:"_blank",rel:"noopener noreferrer"},r=(0,p.Uk)("編碼格式"),k=(0,p.uE)("<ul><li>預設 header<code>application/x-www-form-urlencoded</code> body 長這樣 <code>&quot;key1=value1&amp;key2=value2&quot;</code></li><li><code>application/json</code> body 長這樣 <code>{&quot;id&quot;:1,&quot;name&quot;:cat}</code></li><li><code>multipart/form-data</code> body 長這樣 <code>key1=value1key2=value2</code></li><li><code>text/plain</code> body 長這樣 <code>&lt;b&gt;hello world&lt;/b&gt;</code></li></ul>",1),b={href:"https://dpes5407.medium.com/%E5%BE%9E%E9%9B%B6%E9%96%8B%E5%A7%8B%E5%AF%AB%E5%BE%8C%E7%AB%AF-%E7%B4%80%E9%8C%84-29689432f9f8",target:"_blank",rel:"noopener noreferrer"},d=(0,p.Uk)("入坑 Nodejs 文章"),m=(0,p.Wm)("p",null,"沒有這些會非常辛苦!",-1),f=(0,p.Wm)("h2",{id:"github-有整理了我寫的範例"},[(0,p.Wm)("a",{class:"header-anchor",href:"#github-有整理了我寫的範例"},"#"),(0,p.Uk)(" Github 有整理了我寫的範例")],-1),h={href:"https://github.com/todomonster/template-code-example/tree/main/express/express4",target:"_blank",rel:"noopener noreferrer"},g=(0,p.Uk)("Express example"),q=(0,p.Wm)("h2",{id:"知識補充"},[(0,p.Wm)("a",{class:"header-anchor",href:"#知識補充"},"#"),(0,p.Uk)(" 知識補充")],-1),x=(0,p.Uk)("如何預防使用者串改副檔名? 交給 file-type"),y=(0,p.uE)('<h2 id="body-parser-新舊程式碼-pk"><a class="header-anchor" href="#body-parser-新舊程式碼-pk">#</a> body-parser 新舊程式碼 PK</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// body-parser 簡單來說就是編碼轉換的套件，Express 4.16已經合併進來，不用另外安裝</span>\n<span class="token comment">// 強力建議看完這篇 https://ithelp.ithome.com.tw/articles/10241083</span>\n\n<span class="token comment">// 為什麼urlencoded要繼承? 因為他引用了其他套件;2個要選一個</span>\n\n<span class="token comment">// json data =&gt; postman 格式選 raw/json</span>\n<span class="token comment">// form data =&gt; postman 格式選 x-www-form-urlencoded</span>\n\n<span class="token comment">// ============================== 現代版，箭頭函數，編碼轉換丟第二個參數</span>\n<span class="token keyword">const</span> express <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;express&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\napp<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&quot;/json&quot;</span><span class="token punctuation">,</span> express<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>body<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>body<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\napp<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&quot;/urlencoded&quot;</span><span class="token punctuation">,</span> express<span class="token punctuation">.</span><span class="token function">urlencoded</span><span class="token punctuation">(</span><span class="token punctuation">{</span> extended<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>body<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>body<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\napp<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">3011</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;http://localhost:3011/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// ============================== 以前的版本</span>\n<span class="token keyword">var</span> express <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;express&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">var</span> app <span class="token operator">=</span> <span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">var</span> bodyParser <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;body-parser&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">var</span> jsonParser <span class="token operator">=</span> bodyParser<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\napp<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&quot;/json&quot;</span><span class="token punctuation">,</span> jsonParser<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>body<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>body<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">var</span> urlencodedParser <span class="token operator">=</span> bodyParser<span class="token punctuation">.</span><span class="token function">urlencoded</span><span class="token punctuation">(</span><span class="token punctuation">{</span> extended<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\napp<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&quot;/urlencoded&quot;</span><span class="token punctuation">,</span> urlencodedParser<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>body<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>body<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\napp<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">3011</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;http://localhost:3011/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//你也可能在網路上看到這種的，這樣不大好是因為不一定格是都為json</span>\n<span class="token keyword">const</span> express <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;express&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// 白話就是前端給的資料全部幫我轉成json格式啦</span>\napp<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>express<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\napp<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&quot;/json&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>body<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>body<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\napp<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">3011</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;http://localhost:3011/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div>',4),v={render:function(n,s){const a=(0,p.up)("OutboundLink"),v=(0,p.up)("RouterLink");return(0,p.wg)(),(0,p.j4)(p.HY,null,[t,(0,p.Wm)("ul",null,[e,o,c,u,(0,p.Wm)("li",null,[(0,p.Wm)("p",null,[l,(0,p.Wm)("a",i,[r,(0,p.Wm)(a)])]),k])]),(0,p.Wm)("p",null,[(0,p.Wm)("a",b,[d,(0,p.Wm)(a)])]),m,f,(0,p.Wm)("p",null,[(0,p.Wm)("a",h,[g,(0,p.Wm)(a)])]),q,(0,p.Wm)("p",null,[(0,p.Wm)(v,{to:"/backend/express/file-type.html"},{default:(0,p.w5)((()=>[x])),_:1})]),y],64)}}}}]);