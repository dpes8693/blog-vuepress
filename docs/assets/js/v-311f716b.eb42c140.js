(self.webpackChunkblog_vuepress=self.webpackChunkblog_vuepress||[]).push([[949],{643:(e,r,l)=>{"use strict";l.r(r),l.d(r,{data:()=>i});const i={key:"v-311f716b",path:"/backend/noun.html",title:"後端要懂得知識",lang:"zh-tw",frontmatter:{},excerpt:"",headers:[{level:2,title:"專有名詞",slug:"專有名詞",children:[{level:3,title:"URL 編碼 URL encoding",slug:"url-編碼-url-encoding",children:[]},{level:3,title:"http vs https",slug:"http-vs-https",children:[]},{level:3,title:"域名系統 Domain Name Service",slug:"域名系統-domain-name-service",children:[]},{level:3,title:"正向代理 Proxy",slug:"正向代理-proxy",children:[]},{level:3,title:"反向代理 Reverse Proxy",slug:"反向代理-reverse-proxy",children:[]},{level:3,title:"同源政策 Same Origin Policy",slug:"同源政策-same-origin-policy",children:[]},{level:3,title:"跨來源資源共用 CORS",slug:"跨來源資源共用-cors",children:[]},{level:3,title:"JSONP",slug:"jsonp",children:[]}]},{level:2,title:"工具",slug:"工具",children:[]}],filePathRelative:"backend/noun.md",git:{updatedTime:1654522541e3,contributors:[{name:"Richard Lin",email:"33016870+dpes8693@users.noreply.github.com",commits:1}]}}},5090:(e,r,l)=>{"use strict";l.r(r),l.d(r,{default:()=>a});const i=(0,l(6252).uE)('<h1 id="後端要懂得知識"><a class="header-anchor" href="#後端要懂得知識">#</a> 後端要懂得知識</h1><h2 id="專有名詞"><a class="header-anchor" href="#專有名詞">#</a> 專有名詞</h2><h3 id="url-編碼-url-encoding"><a class="header-anchor" href="#url-編碼-url-encoding">#</a> URL 編碼 URL encoding</h3><p>網址列文字轉換 間諜家家酒 (UTF8) =&gt; %e9%96%93%e8%ab%9c%e5%ae%b6%e5%ae%b6%e9%85%92 (URL 編碼)</p><h3 id="http-vs-https"><a class="header-anchor" href="#http-vs-https">#</a> http vs https</h3><p>通訊協定</p><p>標頭 Header 身體 Body</p><h3 id="域名系統-domain-name-service"><a class="header-anchor" href="#域名系統-domain-name-service">#</a> 域名系統 Domain Name Service</h3><p>域名系統 = DNS = Domain Name Service</p><h3 id="正向代理-proxy"><a class="header-anchor" href="#正向代理-proxy">#</a> 正向代理 Proxy</h3><h3 id="反向代理-reverse-proxy"><a class="header-anchor" href="#反向代理-reverse-proxy">#</a> 反向代理 Reverse Proxy</h3><h3 id="同源政策-same-origin-policy"><a class="header-anchor" href="#同源政策-same-origin-policy">#</a> 同源政策 Same Origin Policy</h3><p>同源政策 = SOP = Same Origin Policy</p><ul><li>同 Communication Protocol</li><li>同 host(domain)</li><li>同 port</li></ul><h3 id="跨來源資源共用-cors"><a class="header-anchor" href="#跨來源資源共用-cors">#</a> 跨來源資源共用 CORS</h3><p>跨來源資源共用 = CORS = Cross-Origin Resource Sharing 打 API 會先做 Origin 檢查 Access-Control-Allow-Origin: *</p><h3 id="jsonp"><a class="header-anchor" href="#jsonp">#</a> JSONP</h3><p>script 標籤 和 打 API(AJAX 請求不同，瀏覽器不會使用同源政策去限制)</p><h2 id="工具"><a class="header-anchor" href="#工具">#</a> 工具</h2><ul><li><p>Postman</p></li><li><p>Fiddler</p></li></ul>',20),a={render:function(e,r){return i}}}}]);